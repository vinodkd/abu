10/23/2010: Starting log as this seems useful to explain changes chronologically
10/23/2010: Feedback from Chug 1021:
                - see how abu could be integrated with workflow engines for it to fully serve the purpose of a hadoop dsl
                - make it a maven plugin so that viz could be integrated into the CI workflow
                - keep the "java trapdoor" ie, the ability to drop down into the raw java code because that does make sense in a production scenario
            Changing roadmap accordingly
10/25/2010: Working on using modules right. 
10/26/2010: Tried to get jruby to run; couldnt. Have forgotten how it worked before. jabu script has been created, but jruby is not running by itself either. TODO
10/26/2010: was trying to move to erb for the templates, and reading about binding. Will need this to execute the templates in the context of the command being output.
            - also need to find a way to have the templates as separate files instead of in the code.
10/27/2010: All of this so that erb would allow for the templates to represent actual variable names instead of args0[xx].But that array is built from mutiple objects,
            and not sure if its worth doing it now.
            Larger refactor: Make pluggable templates, ie each command could have more than one gen and viz templates, that can be chosen on the fly. currently only
            one template is supported.
10/27/20107:05 AM : almost at end of erb conversion. wierdly only one template - viz-block-bottom requires escaped quotes. pending to be converted: all the link templates
            then save it, remove binding arg , save again, then move apply_template to templates.rb
10/27/20107:11 AM: btw jruby is working now. problem turned out to be inclusion of a windows path in the classpath. removing qtjava.zip from classpath did the trick
10/27/20109:16 AM: found reason for block_bottom not working: was still using ruby templates, not erb
10/27/20105:01 PM: need to organize docs a bit. Idea.txt has the core idea, roadmap, some design and the colophon. Design.txt has some design discussion.
                readme.markdown has a bit of the idea, a how to guide, a sample, and the colophon.
                I should do the following:
                    - readme.markdown will be the front page and point to the others.
                    - keep Idea.txt to the original idea and colophon. Any new pie-in-the-sky ideas will be added here.
                    - Move all design to design.txt
                    - create a new roadmap file
                    - create a new howto guide
10/28/20106:38 AM: Productive morning. Rearranged and fixed markdown syntax of most documents, made some improvements in the erb migration. moved one template to an external file, and made the tool work with it seems to work fine.
    next steps: 
        - migrate more templates
        - evaluate moving the generate and visualize to templates themselves.
10/28/201010:53 AM: might be a good idea to have all templates of one kind in one directory for ease of packaging.
10/31/201010:04 AM: Still working on defining the syntax for java code and existing job inclusion into abu.problems to be worked out:
                    - how to represent :at_class and :at_main java code for individual map and reduce steps. Might have to introduce child methods for those commands, which means refactor to make them classes of their own. Ans: make them optional attributes of the map and reduce commands.
                    - how to represent external jobs such that the generated java class will actually invoke them. Currently i've represented them as forked jobs, but how will that work within the overall workflow? this is tbd. might need to make some compromises
                    
    